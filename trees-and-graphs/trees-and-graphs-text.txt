General

- the root node is the node at the very top
- if a node has no children, then it is a leaf node
- the root has a depth of 0, every child has a depth of parentDepth + 1

- two types of traversal => dfs & bfs
- depth-first-search
    - preorder: operate before children
    - inorder: operate during children
    - postorder: operate after children

- breadth-first search
    - use bfs when we need to handle the node at the current level
    - 

- dfs vs bfs
    - dfs will search left most side
    - bfs will search the level
    - dsf uses space linear to the height of the tree
    - bfs uses space linear to the width of the tree


Binary Search Trees (BST)

- all nodes can have at most two children. Referred to as left and right
- every node except the root has one parent

- inorder dfs traversal means that we will visit nodes in ascending order and 
use recursion to implement this

